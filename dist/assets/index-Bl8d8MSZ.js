(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function c(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(e){if(e.ep)return;e.ep=!0;const o=c(e);fetch(e.href,o)}})();document.querySelectorAll(".card");const f=document.querySelector(".parallax_img");document.querySelector(".parallax-skills_img");const v=document.querySelector(".return-home-icon"),d=document.querySelector(".navbar"),_=document.querySelector(".navbar-icon"),m=document.querySelector(".navbar_menu"),q=document.querySelectorAll(".navbar_menu_link"),x=document.querySelector(".title_position h1"),y=document.querySelector(".title_child2"),l=document.querySelector(".about_image"),i=document.querySelector(".about_text p"),p=document.querySelectorAll(".skills_images_wrapper"),b=document.querySelector(".skills_content"),g=document.querySelector(".contact"),h=document.querySelectorAll(".contact_link"),E=document.querySelector(".scroll");window.addEventListener("load",()=>{window.innerWidth<600?d.style.padding="10px 0px":d.style.padding="20px 0px",d.style.opacity="1",y.style.opacity="1",y.style.transform="translateY(0px)",q.forEach((t,s)=>{setTimeout(()=>{t.style.opacity="1",t.style.transform="translateY(0)"},s*100+100)}),x.style.opacity="1"});let u=!1;_.addEventListener("click",()=>{u?m.style.display="none":m.style.display="flex",u=!u});window.addEventListener("scroll",()=>{E.style.opacity="0",f.style.transform=`translateY(${scrollY*.4}px)`,v.style.visibility="visible"});const L={root:null,rootMargin:"0px",threshold:.35},n=new IntersectionObserver(t=>{t.forEach(s=>{if(s.isIntersecting)switch(s.target){case l:l.style.transform="translateX(0)",l.style.opacity="1";break;case i:i.style.transform="translateY(0)",i.style.opacity="1";break;case b:setTimeout(()=>{p.forEach((c,r)=>{setTimeout(()=>{c.style.transform="translateY(0)",c.style.opacity="1"},r*100+100)})},100);break;case g:h.forEach((c,r)=>{setTimeout(()=>{c.style.opacity="1",c.style.transform="translateY(0)"},r*300+300)});break}})},L);n.observe(f);n.observe(v);n.observe(l);n.observe(i);n.observe(g);p.forEach(t=>{n.observe(t)});n.observe(b);h.forEach(t=>{n.observe(t)});fetch("/projects.json").then(t=>t.json()).then(t=>{const s=document.querySelector(".card-flex");console.log(s);let c="";t.forEach(r=>{const e=r.resume.replace(/\n/g,"<br>"),o=Object.entries(r.tags).map(([S,w])=>`<div class="card_tag">${S}</div>`).join(" "),a=r.url?`<a href="${r.url}" target="_blank">voir le site</a>`:"";c+=`
        <div class="card">
          <div class="card_content">
            <div class="card_cover-img"> 
              <img src="${r.cover}" alt="${r.coverAlt}">
            </div> 
            <div class="card_tags">${o}</div>
            <h3>${r.title}</h3>
            <p>${e}</p>
            <div class="card_buttons">
              ${a}
              <a href="${r.codeUrl}" target="_blank">voir le code</a>
            </div>
          </div>
        </div>
      `}),s.innerHTML=c}).catch(t=>{console.error("Erreur lors du chargement des projets:",t)});
